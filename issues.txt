Issue 1. Consider defining a bean of type 'org.springframework.security.oauth2.jwt.JwtDecoder' in your configuration.
Soulution::
Add this missing property in bootstrap.properties
==> spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservices-realm

Issue 2
The bean 'tokenRelayGatewayFilterFactory', defined in class path resource [org/springframework/cloud/security/oauth2/gateway/TokenRelayAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource 
[org/springframework/cloud/gateway/config/GatewayAutoConfiguration$TokenRelayConfiguration.class] and overriding is disabled.
Solution::
Consider renaming one of the beans or enabling overriding by setting 
spring.main.allow-bean-definition-overriding=true

Issue 3
Login Page issue in Postman 
Solution::
(This change is needed when you want to hit the apis from Postman Authorization feature)
Change ApiGateway service as OAuth2 resource server instead of OAuth2 Client (see Part 2 revised Video) 

Issue 4
Feign Clinet Authorization was failing(UnAuthorized 401) while inventory service call from 
order-service (service to service)
Solution ::
JWT issuer property was missing
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservices-realm

Issue 5
Can not find local variable securityContextHolder after adding the resilliance library,
Solution::
This is because we protected the call from a Circuit Breaker.
so for this reason resilliance will call the inventory service in different thread than the main thread.
In this  there is no access available for the security context, so for this reason it throws the exception.
Overide default value of Spring Security



